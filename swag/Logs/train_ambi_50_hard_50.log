Training arguments Namespace(adam_epsilon=1e-08, distributed_backend=None, early_stop_callback=False, fp_16=False, max_grad_norm=1.0, n_gpu=-1, num_workers=8, opt_level='O1', warmup_steps=0, weight_decay=0.0)
--------------------
Model arguments Namespace(hidden_dropout_prob=0.15, max_input_seq_length=128, model_name_or_path='bert-base-uncased')
--------------------
Other arguments Namespace(DEV_FILE='./sst2_dev.csv', TRAIN_FILE='./train_ambi_50_hard_50.csv', do_fast_dev_run=False, eval_batch_size=16, gradient_accumulation_steps=1, learning_rate=5e-05, limit_train_batches=-1, limit_val_batches=-1, max_train_samples=-1, num_train_epochs=5, output_dir='./', predictions_file='predictions.csv', save_last=False, save_top_k=-1, seed=42, train_batch_size=16, write_dev_predictions=True)
--------------------
Global seed set to 42
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertForMultipleChoice: ['cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.bias', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight']
- This IS expected if you are initializing BertForMultipleChoice from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMultipleChoice from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BertForMultipleChoice were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name  | Type                  | Params
------------------------------------------------
0 | model | BertForMultipleChoice | 109 M 
------------------------------------------------
109 M     Trainable params
0         Non-trainable params
109 M     Total params
437.932   Total estimated model params size (MB)
/usr/local/lib/python3.7/dist-packages/pytorch_lightning/callbacks/model_checkpoint.py:623: UserWarning: Checkpoint directory /content/sample_data exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
Validation sanity check: 0it [00:00, ?it/s]/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:481: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  cpuset_checked))
Validation sanity check:   0% 0/2 [00:00<?, ?it/s]--------------------
Validation avg_loss:  tensor(1.3864, device='cuda:0')
Validation avg_acc:  tensor(0.3750, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_0_predictions.csv
--------------------
Global seed set to 42
/usr/local/lib/python3.7/dist-packages/pytorch_lightning/trainer/data_loading.py:408: UserWarning: The number of training samples (28) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
  f"The number of training samples ({self.num_training_batches}) is smaller than the logging interval"
Epoch 0:  19% 40/216 [01:04<04:45,  1.62s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Validating: 0it [00:00, ?it/s]
Validating:   0% 0/188 [00:00<?, ?it/s]
Epoch 0:  28% 60/216 [01:23<03:36,  1.39s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  37% 80/216 [01:41<02:52,  1.27s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  46% 100/216 [01:59<02:18,  1.19s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  56% 120/216 [02:17<01:49,  1.14s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  65% 140/216 [02:35<01:24,  1.11s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  74% 160/216 [02:53<01:00,  1.08s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  83% 180/216 [03:10<00:38,  1.06s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0:  93% 200/216 [03:28<00:16,  1.04s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Epoch 0: 100% 216/216 [03:46<00:00,  1.05s/it, loss=1.37, v_num=1, train_loss_step=1.300, train_acc_step=0.375]
Validating: 100% 188/188 [02:48<00:00,  1.12it/s]--------------------
Validation avg_loss:  tensor(1.2394, device='cuda:0')
Validation avg_acc:  tensor(0.5126, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_0_predictions.csv
--------------------
Epoch 0: 100% 216/216 [03:53<00:00,  1.08s/it, loss=1.34, v_num=1, train_loss_step=1.220, train_acc_step=0.625]
                                                 --------------------
Train avg_loss:  tensor(1.3478, device='cuda:0')
Train avg_acc:  tensor(0.3371, device='cuda:0')
--------------------
tcmalloc: large alloc 1092804608 bytes == 0x5637cd8f6000 @  0x7f10df1c7615 0x5636b13cf4cc 0x5636b14af47a 0x5636b13d5f0c 0x7f10da4199e4 0x7f10da421b14 0x7f10da3f6a60 0x7f1031bd4f55 0x7f1031bd088e 0x7f1031bd8235 0x7f10da3f6fae 0x7f10d9b6daa8 0x5636b13d3098 0x5636b14464d9 0x5636b1440ced 0x5636b13d3bda 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1445d00 0x5636b13d3afa 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b13d3afa 0x5636b1441c0d 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b14409ee
tcmalloc: large alloc 1366007808 bytes == 0x56375495a000 @  0x7f10df1c7615 0x5636b13cf4cc 0x5636b14af47a 0x5636b13d5f0c 0x7f10da4199e4 0x7f10da421b14 0x7f10da3f6a60 0x7f1031bd4f55 0x7f1031bd088e 0x7f1031bd8235 0x7f10da3f6fae 0x7f10d9b6daa8 0x5636b13d3098 0x5636b14464d9 0x5636b1440ced 0x5636b13d3bda 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1445d00 0x5636b13d3afa 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b13d3afa 0x5636b1441c0d 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b14409ee
tcmalloc: large alloc 1707515904 bytes == 0x5637cd8f6000 @  0x7f10df1c7615 0x5636b13cf4cc 0x5636b14af47a 0x5636b13d5f0c 0x7f10da4199e4 0x7f10da421b14 0x7f10da3f6a60 0x7f1031bd4f55 0x7f1031bd088e 0x7f1031bd8235 0x7f10da3f6fae 0x7f10d9b6daa8 0x5636b13d3098 0x5636b14464d9 0x5636b1440ced 0x5636b13d3bda 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1445d00 0x5636b13d3afa 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b13d3afa 0x5636b1441c0d 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b14409ee
Epoch 1:  19% 40/216 [01:06<04:53,  1.67s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Validating: 0it [00:00, ?it/s]
Validating:   0% 0/188 [00:00<?, ?it/s]
Epoch 1:  28% 60/216 [01:25<03:42,  1.42s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  37% 80/216 [01:43<02:55,  1.29s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  46% 100/216 [02:01<02:20,  1.21s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  56% 120/216 [02:19<01:51,  1.16s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  65% 140/216 [02:37<01:25,  1.12s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  74% 160/216 [02:55<01:01,  1.09s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  83% 180/216 [03:13<00:38,  1.07s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1:  93% 200/216 [03:30<00:16,  1.05s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Epoch 1: 100% 216/216 [03:48<00:00,  1.06s/it, loss=1.09, v_num=1, train_loss_step=0.845, train_acc_step=0.812, train_loss_epoch=1.350, train_acc_epoch=0.337]
Validating: 100% 188/188 [02:49<00:00,  1.12it/s]--------------------
Validation avg_loss:  tensor(1.0854, device='cuda:0')
Validation avg_acc:  tensor(0.5525, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_1_predictions.csv
--------------------
Epoch 1: 100% 216/216 [03:56<00:00,  1.09s/it, loss=0.999, v_num=1, train_loss_step=0.916, train_acc_step=0.562, train_loss_epoch=1.350, train_acc_epoch=0.337]
                                                 --------------------
Train avg_loss:  tensor(1.0375, device='cuda:0')
Train avg_acc:  tensor(0.5804, device='cuda:0')
--------------------
tcmalloc: large alloc 1707515904 bytes == 0x56375495a000 @  0x7f10df1c7615 0x5636b13cf4cc 0x5636b14af47a 0x5636b13d5f0c 0x7f10da4199e4 0x7f10da421b14 0x7f10da3f6a60 0x7f1031bd4f55 0x7f1031bd088e 0x7f1031bd8235 0x7f10da3f6fae 0x7f10d9b6daa8 0x5636b13d3098 0x5636b14464d9 0x5636b1440ced 0x5636b13d3bda 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1445d00 0x5636b13d3afa 0x5636b1441915 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b13d3afa 0x5636b1441c0d 0x5636b14409ee 0x5636b13d3bda 0x5636b1441c0d 0x5636b14409ee
Epoch 2:  19% 40/216 [01:06<04:53,  1.67s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Validating: 0it [00:00, ?it/s]
Validating:   0% 0/188 [00:00<?, ?it/s]
Epoch 2:  28% 60/216 [01:25<03:42,  1.42s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  37% 80/216 [01:43<02:55,  1.29s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  46% 100/216 [02:01<02:20,  1.21s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  56% 120/216 [02:19<01:51,  1.16s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  65% 140/216 [02:37<01:25,  1.12s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  74% 160/216 [02:55<01:01,  1.09s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  83% 180/216 [03:13<00:38,  1.07s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2:  93% 200/216 [03:31<00:16,  1.06s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Epoch 2: 100% 216/216 [03:49<00:00,  1.06s/it, loss=0.619, v_num=1, train_loss_step=0.371, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
Validating: 100% 188/188 [02:49<00:00,  1.12it/s]--------------------
Validation avg_loss:  tensor(1.0698, device='cuda:0')
Validation avg_acc:  tensor(0.5738, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_2_predictions.csv
--------------------
Epoch 2: 100% 216/216 [03:56<00:00,  1.09s/it, loss=0.555, v_num=1, train_loss_step=0.475, train_acc_step=0.875, train_loss_epoch=1.040, train_acc_epoch=0.580]
                                                 --------------------
Train avg_loss:  tensor(0.5983, device='cuda:0')
Train avg_acc:  tensor(0.8080, device='cuda:0')
--------------------
Epoch 3:  19% 40/216 [01:06<04:52,  1.66s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Validating: 0it [00:00, ?it/s]
Validating:   0% 0/188 [00:00<?, ?it/s]
Epoch 3:  28% 60/216 [01:25<03:41,  1.42s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  37% 80/216 [01:43<02:55,  1.29s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  46% 100/216 [02:01<02:20,  1.21s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  56% 120/216 [02:19<01:51,  1.16s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  65% 140/216 [02:37<01:25,  1.12s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  74% 160/216 [02:54<01:01,  1.09s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  83% 180/216 [03:12<00:38,  1.07s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3:  93% 200/216 [03:30<00:16,  1.05s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Epoch 3: 100% 216/216 [03:48<00:00,  1.06s/it, loss=0.274, v_num=1, train_loss_step=0.356, train_acc_step=0.875, train_loss_epoch=0.598, train_acc_epoch=0.808]
Validating: 100% 188/188 [02:49<00:00,  1.12it/s]--------------------
Validation avg_loss:  tensor(1.2150, device='cuda:0')
Validation avg_acc:  tensor(0.5698, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_3_predictions.csv
--------------------
Epoch 3: 100% 216/216 [03:55<00:00,  1.09s/it, loss=0.279, v_num=1, train_loss_step=0.321, train_acc_step=0.812, train_loss_epoch=0.598, train_acc_epoch=0.808]
                                                 --------------------
Train avg_loss:  tensor(0.2781, device='cuda:0')
Train avg_acc:  tensor(0.9263, device='cuda:0')
--------------------
Epoch 4:  19% 40/216 [01:06<04:53,  1.67s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Validating: 0it [00:00, ?it/s]
Validating:   0% 0/188 [00:00<?, ?it/s]
Epoch 4:  28% 60/216 [01:25<03:42,  1.42s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  37% 80/216 [01:43<02:55,  1.29s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  46% 100/216 [02:01<02:20,  1.21s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  56% 120/216 [02:19<01:51,  1.16s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  65% 140/216 [02:37<01:25,  1.12s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  74% 160/216 [02:55<01:01,  1.09s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  83% 180/216 [03:12<00:38,  1.07s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4:  93% 200/216 [03:30<00:16,  1.05s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Epoch 4: 100% 216/216 [03:48<00:00,  1.06s/it, loss=0.171, v_num=1, train_loss_step=0.176, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
Validating: 100% 188/188 [02:49<00:00,  1.12it/s]--------------------
Validation avg_loss:  tensor(1.2682, device='cuda:0')
Validation avg_acc:  tensor(0.5642, device='cuda:0')
Writing predictions for ./sst2_dev.csv to ./epoch_4_predictions.csv
--------------------
Epoch 4: 100% 216/216 [03:56<00:00,  1.09s/it, loss=0.17, v_num=1, train_loss_step=0.0298, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
                                                 --------------------
Train avg_loss:  tensor(0.1774, device='cuda:0')
Train avg_acc:  tensor(0.9442, device='cuda:0')
--------------------
Epoch 4: 100% 216/216 [04:04<00:00,  1.13s/it, loss=0.17, v_num=1, train_loss_step=0.0298, train_acc_step=1.000, train_loss_epoch=0.278, train_acc_epoch=0.926]
